<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- <security:http pattern="/" security="none" /> -->
	
	<!-- withouth use expressions -->
	<!-- IS_AUTHENTICATED_ANONYMOUSLY  or  ROLE_ROLE_ANONYMOUS -->
	<!--  / permitAll denyAll -->
	<!-- public static final String IS_AUTHENTICATED_FULLY = "IS_AUTHENTICATED_FULLY";
	public static final String IS_AUTHENTICATED_REMEMBERED = "IS_AUTHENTICATED_REMEMBERED";
	public static final String IS_AUTHENTICATED_ANONYMOUSLY = "IS_AUTHENTICATED_ANONYMOUSLY"; -->
	<!-- IS_AUTHENTICATED_FULLY / fullyAuthenticated or isFullyAuthenticated()-->
	

	<!-- use expressions TRUE -->
	<security:http auto-config="true" use-expressions="true">

		<security:intercept-url
			pattern="/appointments/**" access="hasRole('USER') or hasRole('ADMIN')" />

		<security:intercept-url 
			pattern="/schedule/**" access="hasAuthority('ROLE_ADMIN') and principal.username == 'ivgarcia'" />

		<security:intercept-url 
			pattern="/**" access="permitAll" /> <!-- hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_ADMIN') -->

		<security:form-login 
			login-page="/login"
			login-processing-url="/login" 
				username-parameter="custom_username"
				password-parameter="custom_password"
			default-target-url="/appointments" always-use-default-target="true"
			authentication-failure-url="/login?error=1" />

		<security:logout logout-url="/logout" logout-success-url="/login?logout=1" />

	</security:http>

	<!-- enable expressions for security taglibs -->
	<bean
		class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />

	
	<!-- Authentication manager -->
	<security:authentication-manager>

		<security:authentication-provider user-service-ref="customUserDetailService" />

	</security:authentication-manager>

	<!-- <bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" /> -->
		
	<!-- <bean id="passwordEncoder"
		class="org.springframework.security.crypto.password.Pbkdf2PasswordEncoder" /> -->
		
</beans>